# This file was generated by go2nix.
{ stdenv, buildGo17StaticPackage,
  buildGoPackage, capnproto,
  fetchgit, fetchhg, fetchbzr, fetchsvn, lib, go-bindata,
  thonix-frontend, deps ? ./deps.nix}:

let 
  frontend-bindata = stdenv.mkDerivation rec {
    name = "frontend-bindata";
    buildInputs = [go-bindata];
    phases = "buildPhase installPhase fixupPhase";
    buildPhase = ''
      ln -s ${thonix-frontend.out} frontend
      go-bindata -pkg assets frontend/...
    '';
    installPhase = ''
      mkdir -p $out/
      cp bindata.go $out/
    '';
  };
  capnpc-go = buildGoPackage rec {
    name = "capnpc-go-${version}";
    version = "20151023-${stdenv.lib.strings.substring 0 7 rev}";
    rev = "a094e8b41eb423fd4114149c55bbbc345aefd1a3";
    
    goPackagePath = "zombiezen.com/go/capnproto2";

    goDeps = ./capnc-deps.nix;

    src = fetchgit {
      inherit rev;
      url = "https://github.com/zombiezen/go-capnproto2";
      sha256 = "0s0fgk45ncqh7c2ky9phnll7q4fqr4zdxs7fdn8pssjswx1lpi34";
    };

    meta = with stdenv.lib; {
      homepage    = "https://github.com/zombiezen/go-capnproto2";
      description = "The Go version of capnproto code generator";
      maintainers = with maintainers; [ griff ];
      license     = licenses.cc0 ;
      platforms   = platforms.all;
    };
  };

in
buildGo17StaticPackage rec {
  name = "thonix-${version}";
  version = "20161221-${stdenv.lib.strings.substring 0 7 rev}";
  rev = stdenv.lib.commitIdFromGitRepo ./.git;

  buildInputs = [capnproto capnpc-go];

  preBuild = ''
    ls
    echo $PWD
    cp ${frontend-bindata.out}/* "go/src/$goPackagePath/assets/"
    capnp compile -I${capnpc-go.out}/share/go/src/zombiezen.com/go/capnproto2/std -ogo go/src/$goPackagePath/rpc/*.capnp
  '';

  goPackagePath = "github.com/griff/thonix";

  src = ./.;

  goDeps = deps;

  shellHook = ''
  function updateBinData() {
    cp ${frontend-bindata.out}/* assets/
  }
  function updateCAPnP() {
    capnp compile -I${capnpc-go.out}/share/go/src/zombiezen.com/go/capnproto2/std -ogo rpc/*.capnp
  }
  function runPhase() {
    local curPhase="$1"
    eval "''${!curPhase:-$curPhase}"
  }
  function build() {
    go build -v $buildFlags
  }
  '';

  # TODO: add metadata https://nixos.org/nixpkgs/manual/#sec-standard-meta-attributes
  meta = with stdenv.lib; {
    homepage    = "https://github.com/griff/thonix";
    description = "ThoNix UI daemon";
    maintainers = with maintainers; [ griff ];
    license     = licenses.agpl3 ;
    platforms   = platforms.all;
  };

}
